name: Deploy to PythonAnywhere

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Deploy to PythonAnywhere
        run: |
          # 設定基本變量
          BASE_DIR="/home/${{ secrets.PA_USERNAME }}/learnflask"
          API_TOKEN="${{ secrets.PA_API_TOKEN }}"
          API_BASE="https://www.pythonanywhere.com/api/v0/user/${{ secrets.PA_USERNAME }}"
          
          # 確保基本目錄存在
          echo "Creating base project directory..."
          curl -X POST "$API_BASE/files/path$BASE_DIR/" -H "Authorization: Token $API_TOKEN" || true
          
          # 創建必要的目錄結構
          echo "Creating essential directories..."
          for dir in app app/templates app/templates/japanese app/templates/auth app/static app/routes app/services app/models app/utils config; do
            echo "Creating directory: $BASE_DIR/$dir"
            curl -X POST "$API_BASE/files/path$BASE_DIR/$dir/" -H "Authorization: Token $API_TOKEN" || true
          done
          
          # 只創建數據和緩存目錄，但不上傳其內容
          echo "Creating data and cache directories (without uploading their contents)..."
          for dir in app/data cache; do
            echo "Creating directory: $BASE_DIR/$dir"
            curl -X POST "$API_BASE/files/path$BASE_DIR/$dir/" -H "Authorization: Token $API_TOKEN" || true
          done
          
          # 上傳所有文件 - 使用更直接的方法
          echo "Uploading all project files..."
          
          # 上傳主要 Python 文件
          echo "Uploading app.py..."
          curl -X POST "$API_BASE/files/path$BASE_DIR/app.py" \
            -H "Authorization: Token $API_TOKEN" \
            -F "content=@app.py" \
            -F "path=$BASE_DIR/app.py"
            
          echo "Uploading requirements.txt..."
          curl -X POST "$API_BASE/files/path$BASE_DIR/requirements.txt" \
            -H "Authorization: Token $API_TOKEN" \
            -F "content=@requirements.txt" \
            -F "path=$BASE_DIR/requirements.txt"
          
          # 遞迴上傳 app 目錄中的所有 .py 文件，但排除 data 目錄
          find app -type f -name "*.py" | grep -v "app/data/" | while read file; do
            target_path="$BASE_DIR/$file"
            echo "Uploading $file to $target_path"
            curl -X POST "$API_BASE/files/path$target_path" \
              -H "Authorization: Token $API_TOKEN" \
              -F "content=@$file" \
              -F "path=$target_path"
          done
          
          # 遞迴上傳 app/templates 目錄中的所有 .html 文件
          find app/templates -type f -name "*.html" | while read file; do
            target_path="$BASE_DIR/$file"
            echo "Uploading $file to $target_path"
            curl -X POST "$API_BASE/files/path$target_path" \
              -H "Authorization: Token $API_TOKEN" \
              -F "content=@$file" \
              -F "path=$target_path"
          done
          
          # 遞迴上傳 app/static 目錄中的所有文件
          find app/static -type f | while read file; do
            target_path="$BASE_DIR/$file"
            echo "Uploading $file to $target_path"
            curl -X POST "$API_BASE/files/path$target_path" \
              -H "Authorization: Token $API_TOKEN" \
              -F "content=@$file" \
              -F "path=$target_path"
          done
          
          # 遞迴上傳 config 目錄中的所有 .py 文件
          find config -type f -name "*.py" | while read file; do
            target_path="$BASE_DIR/$file"
            echo "Uploading $file to $target_path"
            curl -X POST "$API_BASE/files/path$target_path" \
              -H "Authorization: Token $API_TOKEN" \
              -F "content=@$file" \
              -F "path=$target_path"
          done
          
          # 重新加載應用
          echo "Reloading the web application..."
          curl -X POST "$API_BASE/webapps/${{ secrets.PA_USERNAME }}.pythonanywhere.com/reload/" \
            -H "Authorization: Token $API_TOKEN"
            
          echo "Deployment completed!"

